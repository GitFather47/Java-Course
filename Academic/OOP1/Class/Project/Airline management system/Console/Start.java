import java.util.Scanner;public class Start {    public static int p = 0;    public static void main(String[] args) {        Scanner input = new Scanner(System.in);        Flight[] flight = new Flight[100];        Reservation reservation = new Reservation(flight); // Pass the flight array to the Reservation class        while (true) {            System.out.println("Welcome to US Airlines--------------");            System.out.println("\n\n\n\n\n");            System.out.println("\t\t\t1.Admin\n\t\t\t" + "2.User");            String prompt = input.nextLine();            if (prompt.equals("1")) {                User admin = new User();                if (admin.checkAdmin()) { // Call the checkAdmin method on the admin User object                    System.out.println("\t\t\t1.Install Flight");                    System.out.print("\t\t\tEnter your choice by typing the corresponding number:->");                    int w = input.nextInt();                    input.nextLine(); // Consume the newline left in the input buffer after reading the integer.                    switch (w) {                        case 1:                            flight[p] = new Flight();                            flight[p].install();                            p++;                            break;                    }                }            } else if (prompt.equals("2")) {                System.out.println("\t\t\t1.Reservation\n\t\t\t" + "2.Show Seats\n\t\t\t" + "3.Flights Available\n\t\t\t" + "4. Exit");                System.out.print("\t\t\tEnter your choice by typing the corresponding number:->");                int choice = input.nextInt();                input.nextLine(); // Consume the newline left in the input buffer after reading the integer.                switch (choice) {                    case 1:                        if (flight[p] != null) {                            reservation.setP(p);                            reservation.allotment(); // Call the allotment method from the Reservation object                        } else {                            System.out.println("No flights available.");                        }                        break;                    case 2:                        if (flight[p] != null) {                            flight[p].show();                        } else {                            System.out.println("No flights available.");                        }                        break;                    case 3:                        if (flight[p] != null) {                            flight[p].avail();                        } else {                            System.out.println("No flights available.");                        }                        break;                    case 4:                        System.exit(0);                        break;                    default:                        System.out.println("Invalid choice. Please try again.");                        break;                }            } else {                System.out.println("Invalid option. Please try again.");            }        }    }}