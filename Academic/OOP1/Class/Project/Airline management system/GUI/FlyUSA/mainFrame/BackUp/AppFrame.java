package FlyUSA.mainFrame;import javax.swing.*;import java.awt.*;import java.awt.event.*;import FlyUSA.controller.User.User;import FlyUSA.controller.Admin.Admin;import FlyUSA.controller.User.Passenger;import FlyUSA.function.reservation.Reservation;import FlyUSA.controller.IFeature;import FlyUSA.controller.Admin.Flight;import java.io.IOException;import java.io.BufferedReader;import java.io.FileReader;import java.io.FileWriter;public class AppFrame implements ActionListener {    public static int p = 0;    public static Flight[] flight = new Flight[100];    public static Passenger passenger[] = new Passenger[2000];    public static Reservation reservation[] = new Reservation[2000];    public static JFrame frame, frameUser;    public static JFrame frameAdmin = new JFrame();    public static JPanel panelAdmin= new JPanel(); // Initialize panelAdmin here    public static JLabel topLabel;    public static JPanel top_panel, rightPanel;    private static Admin admin;    private static JButton buttonA;    private static JButton buttonU;    private static JFrame userFrame;    private static JPanel userPanel;    private static JButton buttonExit;     public void showAdminPanel() {            frameAdmin.setTitle("Admin Panel");            frameAdmin.setSize(450, 300);            frameAdmin.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Dispose only this frame            frameAdmin.setLocationRelativeTo(null);            frameAdmin.setResizable(false);             panelAdmin.setLayout(new BoxLayout(panelAdmin, BoxLayout.Y_AXIS));            JButton buttonInstall = new JButton("Install Flight");            buttonInstall.setAlignmentX(Component.CENTER_ALIGNMENT);            buttonInstall.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    flight[p] = new Flight();                    flight[p].install();                }            });            buttonInstall.setPreferredSize(new Dimension(200, 50));            panelAdmin.add(Box.createVerticalGlue());            panelAdmin.add(buttonInstall);            panelAdmin.add(Box.createVerticalGlue());            JButton buttonShow = new JButton("Show all flights");            buttonShow.setAlignmentX(Component.CENTER_ALIGNMENT);            buttonShow.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    boolean flightsInstalled = false;                    //for (int i = 0; i < flight.length; i++) {                        //if (flight[i] != null) {                            flight[p] = new Flight();                            flight[p].showFlightInfoToFile();                            flightsInstalled = true;                        //}                    }                    /*if (!flightsInstalled) {                        JOptionPane.showMessageDialog(null, "No flights installed");                    }*/            });             buttonShow.setPreferredSize(new Dimension(200, 50));             panelAdmin.add(buttonShow);             panelAdmin.add(Box.createVerticalGlue());            frameAdmin.add(panelAdmin);            frameAdmin.setVisible(true);        }    public static void main(String[] args) {        frame = new JFrame("US Airlines");        frame.setTitle("Reserve deez nuts");        frame.setSize(1000, 600);        frame.setLocationRelativeTo(null);        frame.getContentPane().setBackground(new Color(176, 196, 222));        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setLayout(new BorderLayout());        topLabel = new JLabel();        top_panel = new JPanel();        topLabel.setBackground(new Color(65, 105, 225));        topLabel.setForeground(new Color(192, 192, 192));        topLabel.setFont(new Font("Brush Script MT", Font.BOLD, 75));        topLabel.setText("Welcome to US Airlines");        topLabel.setHorizontalAlignment(JLabel.CENTER);        topLabel.setOpaque(true);        top_panel.setLayout(new BorderLayout());        top_panel.setBounds(0, 0, 1600, 100);        top_panel.add(topLabel);        frame.add(top_panel, BorderLayout.NORTH);        JPanel leftPanel = new JPanel();        leftPanel.setLayout(new BoxLayout(leftPanel, BoxLayout.Y_AXIS));        leftPanel.setBackground(new Color(230, 230, 230)); // Buttons will be displayed vertically        leftPanel.setPreferredSize(new Dimension(250, frame.getHeight()));        JPanel centerPanel = new JPanel();        centerPanel.setLayout(new BorderLayout());        centerPanel.setBackground(Color.WHITE);        frame.add(centerPanel, BorderLayout.CENTER);        frame.add(leftPanel, BorderLayout.WEST);        buttonA = new JButton("Admin");        buttonA.setAlignmentX(Component.CENTER_ALIGNMENT); // Center horizontally        buttonA.setPreferredSize(new Dimension(200, 50));        for (int i = 1; i <= 5; i++) {            leftPanel.add(Box.createVerticalGlue());        }        // Add some spacing at the top        leftPanel.add(buttonA);        buttonA.addActionListener(new AppFrame());        JButton buttonU = new JButton("User");        buttonU.setAlignmentX(Component.CENTER_ALIGNMENT); // Center horizontally        buttonU.setPreferredSize(new Dimension(200, 50));        leftPanel.add(Box.createVerticalStrut(20)); // Add some spacing between buttons        buttonU.addActionListener(new AppFrame());        leftPanel.add(buttonU);        leftPanel.add(Box.createVerticalGlue());        leftPanel.add(Box.createVerticalGlue());        JButton buttonExit = new JButton("Exit");        buttonExit.setAlignmentX(Component.CENTER_ALIGNMENT);        buttonExit.setPreferredSize(new Dimension(200, 50));        leftPanel.add(buttonExit);        for (int i = 1; i <= 10; i++) {            leftPanel.add(Box.createVerticalGlue());        }        rightPanel = new JPanel(new GridLayout(1, 1)); // Single cell GridLayout        rightPanel.setPreferredSize(new Dimension(750, rightPanel.getHeight())); // Set the preferred size        ImageIcon imageIcon = new ImageIcon(                "E:/Class/Summer 2nd semester/OOP1/Class/Project/Airline management system/GUI/FlyUSA/mainFrame/AirLine.jpg");        Image image = imageIcon.getImage();        JLabel imageLabel = new JLabel();        rightPanel.add(imageLabel);        frame.add(rightPanel, BorderLayout.CENTER);        frame.addComponentListener(new ComponentAdapter() {            @Override            public void componentResized(ComponentEvent e) {                int width = rightPanel.getWidth();                int height = frame.getHeight();                Image resizedImage = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);                ImageIcon resizedImageIcon = new ImageIcon(resizedImage);                imageLabel.setIcon(resizedImageIcon);            }        });        frame.setVisible(true);    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == buttonA) {             admin = new Admin(new AppFrame());        }        if (e.getSource() == buttonU) {            userFrame = new JFrame("User Menu");            userFrame.setSize(400, 300);            userFrame.setLocationRelativeTo(null);            userFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);            JPanel userPanel = new JPanel();            userPanel.setLayout(new BoxLayout(userPanel, BoxLayout.Y_AXIS));            JButton buttonRes = new JButton("1. Reservation");            buttonRes.setAlignmentX(Component.CENTER_ALIGNMENT);            userPanel.add(Box.createVerticalGlue());            userPanel.add(Box.createVerticalStrut(60));            buttonRes.setPreferredSize(new Dimension(200, 50));            userPanel.add(buttonRes);            buttonRes.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    if (flight[p] != null) {                        //reservation.setP(p);                        reservation[p] = new Reservation(flight[p], passenger[p]);                        reservation[p].allotment();                        passenger[p].savePassengerInfoToFile();                    } else {                        JOptionPane.showMessageDialog(null, "No flights available.");                    }                }            });            JButton buttonShowSeats = new JButton("2. Show Seats");            buttonShowSeats.setAlignmentX(Component.CENTER_ALIGNMENT);            buttonShowSeats.setPreferredSize(new Dimension(200, 50));            userPanel.add(buttonShowSeats);            buttonShowSeats.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    if (flight[p] != null) {                        flight[p].show();                    } else {                        JOptionPane.showMessageDialog(null, "No flights available.");                    }                }            });            JButton buttonFlightsAvail = new JButton("3.Flights Available");            buttonFlightsAvail.setAlignmentX(Component.CENTER_ALIGNMENT);            buttonFlightsAvail.setPreferredSize(new Dimension(200, 50));            userPanel.add(buttonFlightsAvail);            buttonFlightsAvail.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    for (int p = 0; p < flight.length; p++) {                        if (flight[p] == null) {                            JOptionPane.showMessageDialog(null, "No flights installed");                        } else {                            flight[p].showFlightInfoToFile();                            break;                        }                    }                }            });            JButton buttonExitUser = new JButton("4. Exit");            buttonExitUser.setAlignmentX(Component.CENTER_ALIGNMENT);            buttonExitUser.setPreferredSize(new Dimension(200, 50));            userPanel.add(buttonExitUser);            buttonExitUser.addActionListener(new ActionListener() {                public void actionPerformed(ActionEvent e) {                    userFrame.dispose();                }            });        }        if (e.getSource() == buttonExit) {            System.exit(0);        }    }}